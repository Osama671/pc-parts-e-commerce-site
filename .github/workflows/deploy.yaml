name: Deploy

on:
  push:
    branches:
      - main

jobs:
  prettier:
    name: Prettier
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Check formatting with Prettier
        run: npm run format:check

  lint:
    name: Lint code
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Lint code
        run: npm run lint

  publish:
    needs: [prettier, lint]
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - id: build-and-push
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          file: Dockerfile
          tags: ${{ secrets.DOCKERHUB_REPO }}:latest

      - name: Set up ssh
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id
          chmod 0600 ~/.ssh/id
          echo "Host cluster
            HostName ${{ secrets.SERVER_HOST }}
            User fsdm
            IdentityFile ~/.ssh/id
            StrictHostKeyChecking no" > ~/.ssh/config

      - name: Deploy
        run: |
          patch="{
            \"spec\": {
              \"template\": {
                \"spec\": {
                  \"containers\": [
                    {
                      \"name\": \"server\",
                      \"image\": \"${{ secrets.DOCKERHUB_REPO }}@${{ steps.build-and-push.outputs.digest }}\"
                    }
                  ]
                }
              }
            }
          }"
          ssh cluster "kubectl --kubeconfig /home/fsdm/.kube/config --namespace fsdm-pc-shop patch deployment server --patch '$patch'"
